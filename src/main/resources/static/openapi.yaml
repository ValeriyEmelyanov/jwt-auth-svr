openapi: '3.0.3'
info:
  title: jwt-auth-svr
  version: 1.0.0
  description: Аутентификация и авторизация пользователей, администрирование пользователей
servers:
  - url: http://localhost:8080
tags:
  - name: auth
    description: Аутентификация пользователей
  - name: user
    description: Администрирование пользователей

paths:
  /api/auth/login:
    post:
      summary: Аутентификация пользователя
      operationId: login
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/token:
    post:
      summary: Запрос нового токена доступа
      operationId: getNewAccessToken
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshJwtRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/refresh:
    post:
      summary: Запрос нового токена обновления
      operationId: getNewRefreshToken
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshJwtRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /api/users:
    get:
      summary: Получить список пользователей
      operationId: getUsers
      tags:
        - user
      parameters:
        - in: query
          name: page
          description: Номер страницы (нумерация начинается с 1)
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          example: 1
        - in: query
          name: size
          description: Размер страницы (сколько пользователей выведется на страницу)
          allowEmptyValue: true
          schema:
            type: integer
            default: 20
          example: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPageResponse'
    post:
      summary: Создать нового пользователя
      operationId: createUser
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/users/{id}:
    get:
      summary: Получить пользователя по идентификатору
      operationId: getUserById
      tags:
        - user
      parameters:
        - in: path
          name: id
          description: Идентификатор пользователя
          required: true
          schema:
            type: integer
            format: int64
          example: 333
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      summary: Изменить пользователя
      operationId: updateUser
      tags:
        - user
      parameters:
        - in: path
          name: id
          description: Идентификатор пользователя
          required: true
          schema:
            type: integer
            format: int64
          example: 333
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      summary: Удалить пользователя
      operationId: deleteUser
      tags:
        - user
      parameters:
        - in: path
          name: id
          description: Идентификатор пользователя
          required: true
          schema:
            type: integer
            format: int64
          example: 333
      responses:
        '200':
          description: OK
  /api/users/{id}/enabled:
    patch:
      summary: Включить учетную запись пользователя или отключить
      operationId: enableUser
      tags:
        - user
      parameters:
        - in: path
          name: id
          description: Идентификатор пользователя
          required: true
          schema:
            type: integer
            format: int64
          example: 333
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEnabledRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/users/{id}/password:
    patch:
      summary: Изменить пароль пользователя
      operationId: changeUserPassword
      tags:
        - user
      parameters:
        - in: path
          name: id
          description: Идентификатор пользователя
          required: true
          schema:
            type: integer
            format: int64
          example: 333
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'


components:
  schemas:
    AuthRequest:
      type: object
      description: Запрос аутентификации пользователя (логин и пароль)
      properties:
        login:
          type: string
          description: Логин
          example: ivanov_ii
        password:
          type: string
          description: Пароль
          example: 17Sq2*
    AuthResponse:
      type: object
      description: Ответ на запрос аутентификации, содержащий токены доступа и обновления
      properties:
        accessToken:
          type: string
          description: Токен доступа
          example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTY2NjM4NjAwMCwiYXV0aG9yaXRpZXMiOiJhZG1pbjpyZWFkLGFkbWluOndyaXRlIn0.tFEIryVKUckbHp3KC0sDI9CJUFJunpj0U_swv1NdSx7dyDxoXj7FFrRk0K8hUDAGCfd50bQ4wr3rDZs0AvagdA
        refreshToken:
          type: string
          description: Токен доступа
          example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGVzIjpbIkFETUlOIl0sImZpcnN0TmFtZSI6ItCQ0L3RgtC-0L0iLCJleHAiOjE2NzA5MjcwMjZ9.UweqjMw5Um5MPNJk4cMVksw17W_eE1buVvT_Dg-XdsEh693L5HXhb4i0bWsTVO4o56IKQmeK1AIqSc3aDQW-jw
    RefreshJwtRequest:
      type: object
      description: Запрос, содержащий подтверждение в виде токена обновления
      properties:
        refreshToken:
          type: string
          description: Токен доступа
          example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGVzIjpbIkFETUlOIl0sImZpcnN0TmFtZSI6ItCQ0L3RgtC-0L0iLCJleHAiOjE2NzA5MjcwMjZ9.UweqjMw5Um5MPNJk4cMVksw17W_eE1buVvT_Dg-XdsEh693L5HXhb4i0bWsTVO4o56IKQmeK1AIqSc3aDQW-jw

    UserRequest:
      type: object
      description: Запрос на создание пользователя
      properties:
        login:
          type: string
          description: Логин пользователя
          example: ivaniv_ii
        password:
          type: string
          description: пароль пользователя
          example: 12345
        firstName:
          type: string
          description: Имя
          example: Иван
        lastName:
          type: string
          description: Фамилия
          example: Иванов
        phone:
          type: string
          description: Телефон пользователя
          example: +7(999)0010001
        email:
          type: string
          description: Электронный адрес пользователя
          example: ivaniv_ii@our-company.mock
        roles:
          type: array
          items:
            type: string
          description: Роли. Доступные роли ADMIN, MANAGER, HR_MANAGER, USER
          example: [MANAGER, USER]
    UserResponse:
      type: object
      description: Пользователь
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор пользователя
          example: 45
        login:
          type: string
          description: Логин
          example: ivaniv_ii
        enabled:
          type: boolean
          description: Пользователь активен (true) или отключен (false)
          example: true
        firstName:
          type: string
          description: Имя
          example: Иван
        lastName:
          type: string
          description: Фамилия
          example: Иванов
        phone:
          type: string
          description: Телефон
          example: +7(999)0010001
        email:
          type: string
          description: Электронная почта
          example: ivaniv_ii@our-company.mock
        roles:
          type: array
          items:
            type: string
          description: Роли
          example: [MANAGER, USER]
    UserPageResponse:
      type: object
      description: Страница списка пользователей
      properties:
        content:
          description: Список пользователей
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        page:
          description: Номер страницы
          type: integer
          example: 1
        size:
          description: Размер страницы (количество пользователей на странице)
          type: integer
          example: 20
        totalItems:
          description: Всего пользователей
          type: integer
          format: int64
          example: 2
        totalPages:
          description: Всего страниц
          type: integer
          example: 1
    UserEnabledRequest:
      type: object
      description: Запрос на включение учетной записи пользователя или отключение
      properties:
        enabled:
          type: boolean
          description: true - включить учетную запись пользователя, false - отключить пользователя
          example: false
    UserPasswordRequest:
      type: object
      description: Запрос на изменение пароля пользователя
      properties:
        password:
          type: string
          description: новый пароль пользователя
          example: 6%4№21
